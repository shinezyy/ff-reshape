# -*- mode:python -*-

Import('*')


shared_flags = [
    '-Wno-format',
    '-Wno-missing-field-initializers',
]
flag_appends = {
    'CCFLAGS': shared_flags,
    'CXXFLAGS': shared_flags,
}

path_appends = {
    'CPPPATH': [
    'cpu/nemu/include',
    'cpu/nemu/lib-include',
    'cpu/nemu/src/isa/riscv64/include',
    'cpu/nemu/src/engine/interpreter',
    'cpu/nemu/resource',
    ]}
def_appends = {
    'CPPDEFINES': {
        '__DIFF_REF_QEMU__': None,
        'XIANGSHAN': 1,
        '_SHARE': 0,

        '__ENGINE_interpreter__': None,
        '__SIMPOINT': None,
        '__GCPT_COMPATIBLE__': None,
        '__ISA__': 'riscv64',
        '__ISA_riscv64__': None,
        '_ISA_H_': '\\"isa/riscv64.h\\"',
    }}
cc_replace = {'CC': 'g++'}

appends = {**path_appends, **def_appends, **flag_appends}


nemu_files = [
    './src/cpu/cpu-exec.c',
    './src/cpu/tcache.c',
    './src/cpu/difftest/ref.c',
    './src/cpu/difftest/dut.c',
    # './src/user/init/riscv64.c',
    # './src/user/init/x86.c',
    # './src/user/syscall.c',
    # './src/user/memory.c',
    # './src/user/loader.c',
    # './src/nemu-main.c',
    # './src/device/vga.c',
    './src/device/alarm.c',
    # './src/device/disk.c',
    './src/device/intr.c',
    './src/device/device.c',
    # './src/device/audio.c',
    './src/device/io/mmio.c',
    './src/device/io/map.c',
    './src/device/io/port-io.c',
    './src/device/sdcard.c',
    './src/device/serial.c',
    './src/device/uartlite.c',
    # './src/device/keyboard.c',
    # './src/device/timer.c',
    './src/isa/riscv64/logo.c',
    './src/isa/riscv64/rocc/sdi.c',
    './src/isa/riscv64/init.c',
    './src/isa/riscv64/difftest/ref.c',
    './src/isa/riscv64/difftest/dut.c',
    './src/isa/riscv64/system/mmu.c',
    './src/isa/riscv64/system/intr.c',
    './src/isa/riscv64/system/priv.c',
    './src/isa/riscv64/reg.c',
    './src/isa/riscv64/instr/priv/system.c',
    './src/isa/riscv64/instr/decode.c',
    './src/isa/riscv64/instr/rva/amo.c',
    './src/isa/riscv64/instr/fp.c',
    './src/isa/riscv64/clint.c',
    './src/utils/state.c',
    './src/utils/expr.c',
    './src/utils/iqueue.c',
    './src/utils/log.c',
    './src/utils/timer.c',
    './src/monitor/monitor.c',
    './src/monitor/ui.c',
    './src/monitor/watchpoint.c',
    './src/memory/paddr.c',
    './src/memory/host-tlb.c',
    './src/memory/vaddr.c',
    './src/engine/interpreter/fp.c',
    './src/engine/interpreter/init.c',
    './src/engine/interpreter/hostcall.c',
    './src/protocal/instr_trace.c',
    './src/checkpoint/serializer.cpp',
    './src/checkpoint/path_manager.cpp',
    './src/sim/simulation.cpp',
    ]

if 'NemuCPU' in env['CPU_MODELS']:
    SimObject('NemuCPU.py')

    Source('cpu.cc', append=appends, replace=cc_replace)

    for f in nemu_files:
        Source(f, append=appends, replace=cc_replace)

    DebugFlag('NemuCPU')

